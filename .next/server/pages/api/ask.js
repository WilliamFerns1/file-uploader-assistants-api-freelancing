"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/ask";
exports.ids = ["pages/api/ask"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("openai");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fask&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fask.js&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fask&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fask.js&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_ask_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/ask.js */ \"(api)/./pages/api/ask.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_ask_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_ask_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_ask_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_ask_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/ask\",\n        pathname: \"/api/ask\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_ask_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmFzayZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGYXNrLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQytDO0FBQy9DO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyw4Q0FBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsOENBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktbmV4dC1hcHAvPzk2ZWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9hc2suanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hc2tcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hc2tcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fask&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fask.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/ask.js":
/*!**************************!*\
  !*** ./pages/api/ask.js ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([openai__WEBPACK_IMPORTED_MODULE_0__, axios__WEBPACK_IMPORTED_MODULE_1__]);\n([openai__WEBPACK_IMPORTED_MODULE_0__, axios__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst openaiAPIKey = process.env.OPENAI_KEY;\nconst openaiModel = process.env.OPENAI_MODEL;\nconsole.log(openaiAPIKey);\nconsole.log(openaiModel);\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    apiKey: openaiAPIKey\n});\nconst documentQuestionAssistantID = \"asst_K5SzoP1rWSMLS30aIFow9bsX\";\nasync function getDocumentTextFromLink(link) {\n    // Create assistant to get inner content from document. Already created the assistant\n    const instructions = `You are a really good assistant, ready to get the inner content from the document link provided to you. You summarize it in a shorter, digestible way, while still keeping in all necessary details.`;\n    const assistant = await openai.beta.assistants.create({\n        name: \"Document Inner Content Assistant\",\n        instructions: instructions,\n        model: openaiModel || \"gpt-4-turbo\",\n        tools: [\n            {\n                type: \"file_search\"\n            }\n        ]\n    });\n    const assistantId = assistant.id;\n    // Download the file URL and save it with the file name\n    const fileName = link.split(\"/\").pop();\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(link, {\n        responseType: \"arraybuffer\"\n    });\n    const buffer = Buffer.from(response.data);\n    fs__WEBPACK_IMPORTED_MODULE_2___default().writeFileSync(fileName, buffer);\n    console.log(`File \"${fileName}\" downloaded successfully.`);\n    //creating a vector store:\n    const fileStreams = [\n        \"filename\"\n    ].map((path)=>fs__WEBPACK_IMPORTED_MODULE_2___default().createReadStream(path));\n    // Create a vector store including our two files.\n    let vectorStore = await openai.beta.vectorStores.create({\n        name: fileName.split(\".\")[0]\n    });\n    // await openai.beta.vectorStores.fileBatches.uploadAndPoll(vectorStore.id, fileStreams)\n    //\n    // await openai.beta.assistants.update(assistant.id, {\n    //   tool_resources: { file_search: { vector_store_ids: [vectorStore.id] } },\n    // });\n    // A user wants to attach a file to a specific message, let's upload it.\n    const file = await openai.files.create({\n        file: fs__WEBPACK_IMPORTED_MODULE_2___default().createReadStream(fileName),\n        purpose: \"assistants\"\n    });\n    const thread = await openai.beta.threads.create({\n        messages: [\n            {\n                role: \"user\",\n                content: \"Summarize this in a digestable, and well informed way, making it shorter while still having all the necessary details.\",\n                // Attach the new file to the message.\n                attachments: [\n                    {\n                        file_id: file.id,\n                        tools: [\n                            {\n                                type: \"file_search\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    });\n    // The thread now has a vector store in its tool resources.\n    console.log(thread.tool_resources?.file_search);\n    const run = await openai.beta.threads.runs.createAndPoll(thread.id, {\n        assistant_id: assistant.id\n    });\n    const messages = await openai.beta.threads.messages.list(thread.id, {\n        run_id: run.id\n    });\n    const message = messages.data.pop();\n    if (message.content[0].type === \"text\") {\n        const { text } = message.content[0];\n        const { annotations } = text;\n        const citations = [];\n        let index = 0;\n        for (let annotation of annotations){\n            text.value = text.value.replace(annotation.text, \"[\" + index + \"]\");\n            const { file_citation } = annotation;\n            if (file_citation) {\n                const citedFile = await openai.files.retrieve(file_citation.file_id);\n                citations.push(\"[\" + index + \"]\" + citedFile.filename);\n            }\n            index++;\n        }\n        console.log(text.value);\n        console.log(citations.join(\"\\n\"));\n        delay(50000);\n        return text.value;\n    }\n}\nasync function handler(req, res) {\n    if (req.method === \"POST\") {\n        try {\n            // Parse the request body\n            const body = JSON.parse(req.body);\n            const linkOrText = body.linkOrText;\n            const question = body.question;\n            console.log(\"Link or Text: \", linkOrText);\n            console.log(\"Question: \", question);\n            // creating assistant (I already created it)\n            // const instructions = `You are a really good assistant, ready to answer the question based off of the question and document link or text provided to you. If the user provides a link, you call the \"getDocumentTextFromLink\" from your arsenal, to get the returning text from the document, and answer the user's question.`;\n            // const assistant = await openai.beta.assistants.create({\n            //   name: \"Document Question Assistant\",\n            //   instructions: instructions,\n            //   tools: [\n            //     {\n            //       type: \"function\",\n            //       function: {\n            //         name: \"getDocumentTextFromLink\",\n            //         description: \"Get the text string as a return from a document by only providing a link\",\n            //         parameters: {\n            //           type: \"object\",\n            //           properties: {\n            //             link: {\n            //               type: \"string\",\n            //               description: \"The full link of the document.\",\n            //             },\n            //           },\n            //           required: [\"link\"],\n            //         },\n            //       },\n            //     },\n            //   ],\n            //   model: openaiModel || \"gpt-4-turbo\"\n            // });\n            const thread = await openai.beta.threads.create();\n            let userMessage;\n            if (linkOrText.includes(\"http\")) {\n                userMessage = `My question: ${question}. Here is the document I want to ask the question about: ${linkOrText}`;\n            } else {\n                userMessage = `My question: ${question}. The question is about this: ${linkOrText}`;\n            }\n            const message = await openai.beta.threads.messages.create(thread.id, {\n                role: \"user\",\n                content: userMessage\n            });\n            let run = await openai.beta.threads.runs.create(thread.id, {\n                assistant_id: documentQuestionAssistantID,\n                instructions: \"Please answer the user question based off of the link or text provided. If the user provided a link, call the 'getdocumentTextFromLink' function to get the text from the document. Answer the users question to the best of your ability, and provide a detailed response that will satisfies the users question.\"\n            });\n            while(true){\n                await delay(5000); // Delay for 5 seconds\n                const runStatus = await openai.beta.threads.runs.retrieve(thread.id, run.id);\n                if (runStatus.status === \"completed\") {\n                    console.log(\"Completed\");\n                    const messages = await openai.beta.threads.messages.list(thread.id);\n                    for (const message of messages.data){\n                        const messageStr = message.content[0].text.value;\n                        console.log(`${message.role} > ${messageStr}`);\n                        return res.status(200).json({\n                            message: messageStr\n                        });\n                    }\n                    break; // Exit the loop once completed\n                } else if (runStatus.status === \"requires_action\") {\n                    console.log(\"Requires action\");\n                    const requiredActions = runStatus.required_action.submit_tool_outputs;\n                    console.log(requiredActions);\n                    const toolsOutput = [];\n                    for(let i = 0; i < requiredActions[\"tool_calls\"].length; i++){\n                        const action = requiredActions[\"tool_calls\"][i];\n                        const functionName = action[\"function\"][\"name\"];\n                        const args = JSON.parse(action[\"function\"][\"arguments\"]);\n                        console.log(\"action\", action);\n                        console.log(\"functionName\", functionName);\n                        console.log(\"args\", args);\n                        if (functionName == \"getDocumentTextFromLink\") {\n                            console.log(\"Function found\");\n                            console.log(\"Link arg: \", args.link);\n                            const output = await getDocumentTextFromLink(args.link);\n                            console.log(\"Output: \", output);\n                            toolsOutput.push({\n                                \"tool_call_id\": action[\"id\"],\n                                \"output\": output\n                            });\n                        } else {\n                            console.log(\"Function not found\");\n                        }\n                    }\n                    // Submit tools outputs back to the Assistants API \n                    console.log(\"Submitting tool outputs...\");\n                    run = await openai.beta.threads.runs.submitToolOutputsAndPoll(thread.id, run.id, {\n                        tool_outputs: toolsOutput\n                    });\n                    console.log(\"Tool outputs submitted\");\n                } else {\n                    console.log(\"Waiting for the Assistant to process...\");\n                    console.log(runStatus.status);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error processing request:\", error);\n            res.status(500).json({\n                error: \"Error processing request\"\n            });\n        }\n    } else {\n        res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n}\n// Function to create a delay using a promise\nfunction delay(ms) {\n    return new Promise((resolve)=>setTimeout(resolve, ms));\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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NEJBQ1pELFFBQVFDLEdBQUcsQ0FBQyxjQUFjMEYsS0FBS3JGLElBQUk7NEJBQ25DLE1BQU1zRixTQUFTLE1BQU12Rix3QkFBd0JzRixLQUFLckYsSUFBSTs0QkFDdEROLFFBQVFDLEdBQUcsQ0FBQyxZQUFZMkY7NEJBRXhCTixZQUFZdEIsSUFBSSxDQUFDO2dDQUNmLGdCQUFnQnlCLE1BQU0sQ0FBQyxLQUFLO2dDQUM1QixVQUFVRzs0QkFDWjt3QkFDRixPQUNLOzRCQUNINUYsUUFBUUMsR0FBRyxDQUFDO3dCQUNkO29CQUNGO29CQUVBLG1EQUFtRDtvQkFDbkRELFFBQVFDLEdBQUcsQ0FBQztvQkFDWjhDLE1BQU0sTUFBTTdDLE9BQU9PLElBQUksQ0FBQzhCLE9BQU8sQ0FBQ1MsSUFBSSxDQUFDNkMsd0JBQXdCLENBQzNEdkQsT0FBT3JCLEVBQUUsRUFDVDhCLElBQUk5QixFQUFFLEVBQ047d0JBQUU2RSxjQUFjUjtvQkFBWTtvQkFFOUJ0RixRQUFRQyxHQUFHLENBQUM7Z0JBQ2QsT0FFSztvQkFDSEQsUUFBUUMsR0FBRyxDQUFDO29CQUNaRCxRQUFRQyxHQUFHLENBQUM4RSxVQUFVQyxNQUFNO2dCQUM5QjtZQUNGO1FBRUYsRUFBRSxPQUFPZSxPQUFPO1lBQ2QvRixRQUFRK0YsS0FBSyxDQUFDLDZCQUE2QkE7WUFDM0N6QixJQUFJVSxNQUFNLENBQUMsS0FBS0UsSUFBSSxDQUFDO2dCQUFFYSxPQUFPO1lBQTJCO1FBQzNEO0lBQ0YsT0FBTztRQUNMekIsSUFBSVUsTUFBTSxDQUFDLEtBQUtFLElBQUksQ0FBQztZQUFFYSxPQUFPO1FBQXFCO0lBQ3JEO0FBQ0Y7QUFFQSw2Q0FBNkM7QUFDN0MsU0FBUzVCLE1BQU02QixFQUFFO0lBQ2YsT0FBTyxJQUFJQyxRQUFRQyxDQUFBQSxVQUFXQyxXQUFXRCxTQUFTRjtBQUNwRCIsInNvdXJjZXMiOlsid2VicGFjazovL215LW5leHQtYXBwLy4vcGFnZXMvYXBpL2Fzay5qcz8zZWVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPcGVuQUkgZnJvbSBcIm9wZW5haVwiO1xuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcbmltcG9ydCBmcyBmcm9tIFwiZnNcIjtcblxuY29uc3Qgb3BlbmFpQVBJS2V5ID0gcHJvY2Vzcy5lbnYuT1BFTkFJX0tFWTtcbmNvbnN0IG9wZW5haU1vZGVsID0gcHJvY2Vzcy5lbnYuT1BFTkFJX01PREVMO1xuXG5jb25zb2xlLmxvZyhvcGVuYWlBUElLZXkpXG5jb25zb2xlLmxvZyhvcGVuYWlNb2RlbClcblxuY29uc3Qgb3BlbmFpID0gbmV3IE9wZW5BSSh7YXBpS2V5OiBvcGVuYWlBUElLZXl9KVxuXG5jb25zdCBkb2N1bWVudFF1ZXN0aW9uQXNzaXN0YW50SUQgPSBcImFzc3RfSzVTem9QMXJXU01MUzMwYUlGb3c5YnNYXCJcblxuYXN5bmMgZnVuY3Rpb24gZ2V0RG9jdW1lbnRUZXh0RnJvbUxpbmsobGluaykge1xuICAvLyBDcmVhdGUgYXNzaXN0YW50IHRvIGdldCBpbm5lciBjb250ZW50IGZyb20gZG9jdW1lbnQuIEFscmVhZHkgY3JlYXRlZCB0aGUgYXNzaXN0YW50XG4gIGNvbnN0IGluc3RydWN0aW9ucyA9IGBZb3UgYXJlIGEgcmVhbGx5IGdvb2QgYXNzaXN0YW50LCByZWFkeSB0byBnZXQgdGhlIGlubmVyIGNvbnRlbnQgZnJvbSB0aGUgZG9jdW1lbnQgbGluayBwcm92aWRlZCB0byB5b3UuIFlvdSBzdW1tYXJpemUgaXQgaW4gYSBzaG9ydGVyLCBkaWdlc3RpYmxlIHdheSwgd2hpbGUgc3RpbGwga2VlcGluZyBpbiBhbGwgbmVjZXNzYXJ5IGRldGFpbHMuYDtcblxuICBjb25zdCBhc3Npc3RhbnQgPSBhd2FpdCBvcGVuYWkuYmV0YS5hc3Npc3RhbnRzLmNyZWF0ZSh7XG4gICAgbmFtZTogXCJEb2N1bWVudCBJbm5lciBDb250ZW50IEFzc2lzdGFudFwiLFxuICAgIGluc3RydWN0aW9uczogaW5zdHJ1Y3Rpb25zLFxuICAgIG1vZGVsOiBvcGVuYWlNb2RlbCB8fCBcImdwdC00LXR1cmJvXCIsXG4gICAgdG9vbHM6IFt7IHR5cGU6IFwiZmlsZV9zZWFyY2hcIiB9XSxcbiAgfSk7XG5cbiAgY29uc3QgYXNzaXN0YW50SWQgPSBhc3Npc3RhbnQuaWQ7XG5cbiAgLy8gRG93bmxvYWQgdGhlIGZpbGUgVVJMIGFuZCBzYXZlIGl0IHdpdGggdGhlIGZpbGUgbmFtZVxuICBjb25zdCBmaWxlTmFtZSA9IGxpbmsuc3BsaXQoXCIvXCIpLnBvcCgpO1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChsaW5rLCB7IHJlc3BvbnNlVHlwZTogJ2FycmF5YnVmZmVyJyB9KTtcbiAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmZyb20ocmVzcG9uc2UuZGF0YSk7XG5cbiAgZnMud3JpdGVGaWxlU3luYyhmaWxlTmFtZSwgYnVmZmVyKTtcbiAgY29uc29sZS5sb2coYEZpbGUgXCIke2ZpbGVOYW1lfVwiIGRvd25sb2FkZWQgc3VjY2Vzc2Z1bGx5LmApO1xuXG4gIC8vY3JlYXRpbmcgYSB2ZWN0b3Igc3RvcmU6XG4gIGNvbnN0IGZpbGVTdHJlYW1zID0gW1wiZmlsZW5hbWVcIl0ubWFwKChwYXRoKSA9PlxuICAgIGZzLmNyZWF0ZVJlYWRTdHJlYW0ocGF0aCksXG4gICk7XG5cbiAgLy8gQ3JlYXRlIGEgdmVjdG9yIHN0b3JlIGluY2x1ZGluZyBvdXIgdHdvIGZpbGVzLlxuICBsZXQgdmVjdG9yU3RvcmUgPSBhd2FpdCBvcGVuYWkuYmV0YS52ZWN0b3JTdG9yZXMuY3JlYXRlKHtcbiAgICBuYW1lOiBmaWxlTmFtZS5zcGxpdChcIi5cIilbMF0sXG4gIH0pO1xuXG4gIC8vIGF3YWl0IG9wZW5haS5iZXRhLnZlY3RvclN0b3Jlcy5maWxlQmF0Y2hlcy51cGxvYWRBbmRQb2xsKHZlY3RvclN0b3JlLmlkLCBmaWxlU3RyZWFtcylcbiAgLy9cbiAgLy8gYXdhaXQgb3BlbmFpLmJldGEuYXNzaXN0YW50cy51cGRhdGUoYXNzaXN0YW50LmlkLCB7XG4gIC8vICAgdG9vbF9yZXNvdXJjZXM6IHsgZmlsZV9zZWFyY2g6IHsgdmVjdG9yX3N0b3JlX2lkczogW3ZlY3RvclN0b3JlLmlkXSB9IH0sXG4gIC8vIH0pO1xuICBcbiAgLy8gQSB1c2VyIHdhbnRzIHRvIGF0dGFjaCBhIGZpbGUgdG8gYSBzcGVjaWZpYyBtZXNzYWdlLCBsZXQncyB1cGxvYWQgaXQuXG4gIGNvbnN0IGZpbGUgPSBhd2FpdCBvcGVuYWkuZmlsZXMuY3JlYXRlKHtcbiAgICBmaWxlOiBmcy5jcmVhdGVSZWFkU3RyZWFtKGZpbGVOYW1lKSxcbiAgICBwdXJwb3NlOiBcImFzc2lzdGFudHNcIixcbiAgfSk7XG5cbiAgY29uc3QgdGhyZWFkID0gYXdhaXQgb3BlbmFpLmJldGEudGhyZWFkcy5jcmVhdGUoe1xuICAgIG1lc3NhZ2VzOiBbXG4gICAgICB7XG4gICAgICAgIHJvbGU6IFwidXNlclwiLFxuICAgICAgICBjb250ZW50OiBcIlN1bW1hcml6ZSB0aGlzIGluIGEgZGlnZXN0YWJsZSwgYW5kIHdlbGwgaW5mb3JtZWQgd2F5LCBtYWtpbmcgaXQgc2hvcnRlciB3aGlsZSBzdGlsbCBoYXZpbmcgYWxsIHRoZSBuZWNlc3NhcnkgZGV0YWlscy5cIixcbiAgICAgICAgLy8gQXR0YWNoIHRoZSBuZXcgZmlsZSB0byB0aGUgbWVzc2FnZS5cbiAgICAgICAgYXR0YWNobWVudHM6IFt7IGZpbGVfaWQ6IGZpbGUuaWQsIHRvb2xzOiBbeyB0eXBlOiBcImZpbGVfc2VhcmNoXCIgfV0gfV0sXG4gICAgICB9LFxuICAgIF0sXG4gIH0pO1xuXG4gIC8vIFRoZSB0aHJlYWQgbm93IGhhcyBhIHZlY3RvciBzdG9yZSBpbiBpdHMgdG9vbCByZXNvdXJjZXMuXG4gIGNvbnNvbGUubG9nKHRocmVhZC50b29sX3Jlc291cmNlcz8uZmlsZV9zZWFyY2gpO1xuXG4gIGNvbnN0IHJ1biA9IGF3YWl0IG9wZW5haS5iZXRhLnRocmVhZHMucnVucy5jcmVhdGVBbmRQb2xsKHRocmVhZC5pZCwge1xuICAgIGFzc2lzdGFudF9pZDogYXNzaXN0YW50LmlkLFxuICB9KTtcblxuICBjb25zdCBtZXNzYWdlcyA9IGF3YWl0IG9wZW5haS5iZXRhLnRocmVhZHMubWVzc2FnZXMubGlzdCh0aHJlYWQuaWQsIHtcbiAgICBydW5faWQ6IHJ1bi5pZCxcbiAgfSk7XG5cbiAgY29uc3QgbWVzc2FnZSA9IG1lc3NhZ2VzLmRhdGEucG9wKCk7XG4gIGlmIChtZXNzYWdlLmNvbnRlbnRbMF0udHlwZSA9PT0gXCJ0ZXh0XCIpIHtcbiAgICBjb25zdCB7IHRleHQgfSA9IG1lc3NhZ2UuY29udGVudFswXTtcbiAgICBjb25zdCB7IGFubm90YXRpb25zIH0gPSB0ZXh0O1xuICAgIGNvbnN0IGNpdGF0aW9ucyA9IFtdO1xuXG4gICAgbGV0IGluZGV4ID0gMDtcbiAgICBmb3IgKGxldCBhbm5vdGF0aW9uIG9mIGFubm90YXRpb25zKSB7XG4gICAgICB0ZXh0LnZhbHVlID0gdGV4dC52YWx1ZS5yZXBsYWNlKGFubm90YXRpb24udGV4dCwgXCJbXCIgKyBpbmRleCArIFwiXVwiKTtcbiAgICAgIGNvbnN0IHsgZmlsZV9jaXRhdGlvbiB9ID0gYW5ub3RhdGlvbjtcbiAgICAgIGlmIChmaWxlX2NpdGF0aW9uKSB7XG4gICAgICAgIGNvbnN0IGNpdGVkRmlsZSA9IGF3YWl0IG9wZW5haS5maWxlcy5yZXRyaWV2ZShmaWxlX2NpdGF0aW9uLmZpbGVfaWQpO1xuICAgICAgICBjaXRhdGlvbnMucHVzaChcIltcIiArIGluZGV4ICsgXCJdXCIgKyBjaXRlZEZpbGUuZmlsZW5hbWUpO1xuICAgICAgfVxuICAgICAgaW5kZXgrKztcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZyh0ZXh0LnZhbHVlKTtcbiAgICBjb25zb2xlLmxvZyhjaXRhdGlvbnMuam9pbihcIlxcblwiKSk7XG4gICAgZGVsYXkoNTAwMDApICAgIFxuICAgIHJldHVybiB0ZXh0LnZhbHVlO1xuICB9XG5cbn1cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcblxuICBpZiAocmVxLm1ldGhvZCA9PT0gJ1BPU1QnKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIFBhcnNlIHRoZSByZXF1ZXN0IGJvZHlcbiAgICAgIGNvbnN0IGJvZHkgPSBKU09OLnBhcnNlKHJlcS5ib2R5KTtcblxuICAgICAgY29uc3QgbGlua09yVGV4dCA9IGJvZHkubGlua09yVGV4dDtcbiAgICAgIGNvbnN0IHF1ZXN0aW9uID0gYm9keS5xdWVzdGlvbjtcbiAgICAgIGNvbnNvbGUubG9nKFwiTGluayBvciBUZXh0OiBcIiwgbGlua09yVGV4dCk7XG4gICAgICBjb25zb2xlLmxvZyhcIlF1ZXN0aW9uOiBcIiwgcXVlc3Rpb24pO1xuICAgIFxuICAgICAgLy8gY3JlYXRpbmcgYXNzaXN0YW50IChJIGFscmVhZHkgY3JlYXRlZCBpdClcbiAgICAgIC8vIGNvbnN0IGluc3RydWN0aW9ucyA9IGBZb3UgYXJlIGEgcmVhbGx5IGdvb2QgYXNzaXN0YW50LCByZWFkeSB0byBhbnN3ZXIgdGhlIHF1ZXN0aW9uIGJhc2VkIG9mZiBvZiB0aGUgcXVlc3Rpb24gYW5kIGRvY3VtZW50IGxpbmsgb3IgdGV4dCBwcm92aWRlZCB0byB5b3UuIElmIHRoZSB1c2VyIHByb3ZpZGVzIGEgbGluaywgeW91IGNhbGwgdGhlIFwiZ2V0RG9jdW1lbnRUZXh0RnJvbUxpbmtcIiBmcm9tIHlvdXIgYXJzZW5hbCwgdG8gZ2V0IHRoZSByZXR1cm5pbmcgdGV4dCBmcm9tIHRoZSBkb2N1bWVudCwgYW5kIGFuc3dlciB0aGUgdXNlcidzIHF1ZXN0aW9uLmA7XG4gICAgICAvLyBjb25zdCBhc3Npc3RhbnQgPSBhd2FpdCBvcGVuYWkuYmV0YS5hc3Npc3RhbnRzLmNyZWF0ZSh7XG4gICAgICAvLyAgIG5hbWU6IFwiRG9jdW1lbnQgUXVlc3Rpb24gQXNzaXN0YW50XCIsXG4gICAgICAvLyAgIGluc3RydWN0aW9uczogaW5zdHJ1Y3Rpb25zLFxuICAgICAgLy8gICB0b29sczogW1xuICAgICAgLy8gICAgIHtcbiAgICAgIC8vICAgICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICAgIC8vICAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAvLyAgICAgICAgIG5hbWU6IFwiZ2V0RG9jdW1lbnRUZXh0RnJvbUxpbmtcIixcbiAgICAgIC8vICAgICAgICAgZGVzY3JpcHRpb246IFwiR2V0IHRoZSB0ZXh0IHN0cmluZyBhcyBhIHJldHVybiBmcm9tIGEgZG9jdW1lbnQgYnkgb25seSBwcm92aWRpbmcgYSBsaW5rXCIsXG4gICAgICAvLyAgICAgICAgIHBhcmFtZXRlcnM6IHtcbiAgICAgIC8vICAgICAgICAgICB0eXBlOiBcIm9iamVjdFwiLFxuICAgICAgLy8gICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgIC8vICAgICAgICAgICAgIGxpbms6IHtcbiAgICAgIC8vICAgICAgICAgICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgIC8vICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiVGhlIGZ1bGwgbGluayBvZiB0aGUgZG9jdW1lbnQuXCIsXG4gICAgICAvLyAgICAgICAgICAgICB9LFxuICAgICAgLy8gICAgICAgICAgIH0sXG4gICAgICAvLyAgICAgICAgICAgcmVxdWlyZWQ6IFtcImxpbmtcIl0sXG4gICAgICAvLyAgICAgICAgIH0sXG4gICAgICAvLyAgICAgICB9LFxuICAgICAgLy8gICAgIH0sXG4gICAgICAvLyAgIF0sXG4gICAgICAvLyAgIG1vZGVsOiBvcGVuYWlNb2RlbCB8fCBcImdwdC00LXR1cmJvXCJcbiAgICAgIC8vIH0pO1xuXG4gICAgICBjb25zdCB0aHJlYWQgPSBhd2FpdCBvcGVuYWkuYmV0YS50aHJlYWRzLmNyZWF0ZSgpO1xuXG4gICAgICBsZXQgdXNlck1lc3NhZ2U7XG4gICAgICBpZiAobGlua09yVGV4dC5pbmNsdWRlcyhcImh0dHBcIikpIHtcbiAgICAgICAgdXNlck1lc3NhZ2UgPSBgTXkgcXVlc3Rpb246ICR7cXVlc3Rpb259LiBIZXJlIGlzIHRoZSBkb2N1bWVudCBJIHdhbnQgdG8gYXNrIHRoZSBxdWVzdGlvbiBhYm91dDogJHtsaW5rT3JUZXh0fWBcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHVzZXJNZXNzYWdlID0gYE15IHF1ZXN0aW9uOiAke3F1ZXN0aW9ufS4gVGhlIHF1ZXN0aW9uIGlzIGFib3V0IHRoaXM6ICR7bGlua09yVGV4dH1gXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSBhd2FpdCBvcGVuYWkuYmV0YS50aHJlYWRzLm1lc3NhZ2VzLmNyZWF0ZShcbiAgICAgICAgdGhyZWFkLmlkLFxuICAgICAgICB7XG4gICAgICAgICAgcm9sZTogXCJ1c2VyXCIsXG4gICAgICAgICAgY29udGVudDogdXNlck1lc3NhZ2UsXG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgICAgXG4gICAgICBsZXQgcnVuID0gYXdhaXQgb3BlbmFpLmJldGEudGhyZWFkcy5ydW5zLmNyZWF0ZShcbiAgICAgICAgdGhyZWFkLmlkLFxuICAgICAgICB7IFxuICAgICAgICAgIGFzc2lzdGFudF9pZDogZG9jdW1lbnRRdWVzdGlvbkFzc2lzdGFudElELFxuICAgICAgICAgIGluc3RydWN0aW9uczogXCJQbGVhc2UgYW5zd2VyIHRoZSB1c2VyIHF1ZXN0aW9uIGJhc2VkIG9mZiBvZiB0aGUgbGluayBvciB0ZXh0IHByb3ZpZGVkLiBJZiB0aGUgdXNlciBwcm92aWRlZCBhIGxpbmssIGNhbGwgdGhlICdnZXRkb2N1bWVudFRleHRGcm9tTGluaycgZnVuY3Rpb24gdG8gZ2V0IHRoZSB0ZXh0IGZyb20gdGhlIGRvY3VtZW50LiBBbnN3ZXIgdGhlIHVzZXJzIHF1ZXN0aW9uIHRvIHRoZSBiZXN0IG9mIHlvdXIgYWJpbGl0eSwgYW5kIHByb3ZpZGUgYSBkZXRhaWxlZCByZXNwb25zZSB0aGF0IHdpbGwgc2F0aXNmaWVzIHRoZSB1c2VycyBxdWVzdGlvbi5cIixcbiAgICAgICAgfVxuICAgICAgKTtcbiAgICAgIFxuICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgYXdhaXQgZGVsYXkoNTAwMCk7IC8vIERlbGF5IGZvciA1IHNlY29uZHNcblxuICAgICAgICBjb25zdCBydW5TdGF0dXMgPSBhd2FpdCBvcGVuYWkuYmV0YS50aHJlYWRzLnJ1bnMucmV0cmlldmUoXG4gICAgICAgICAgdGhyZWFkLmlkLFxuICAgICAgICAgIHJ1bi5pZFxuICAgICAgICApO1xuXG4gICAgICAgIGlmIChydW5TdGF0dXMuc3RhdHVzID09PSAnY29tcGxldGVkJykge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ29tcGxldGVkXCIpXG4gICAgICAgICAgY29uc3QgbWVzc2FnZXMgPSBhd2FpdCBvcGVuYWkuYmV0YS50aHJlYWRzLm1lc3NhZ2VzLmxpc3QoXG4gICAgICAgICAgICB0aHJlYWQuaWRcbiAgICAgICAgICApO1xuXG4gICAgICAgICAgZm9yIChjb25zdCBtZXNzYWdlIG9mIG1lc3NhZ2VzLmRhdGEpIHtcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2VTdHIgPSBtZXNzYWdlLmNvbnRlbnRbMF0udGV4dC52YWx1ZTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGAke21lc3NhZ2Uucm9sZX0gPiAke21lc3NhZ2VTdHJ9YClcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6IG1lc3NhZ2VTdHIgfSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrOyAvLyBFeGl0IHRoZSBsb29wIG9uY2UgY29tcGxldGVkXG4gICAgICAgIH0gXG5cbiAgICAgICAgZWxzZSBpZiAocnVuU3RhdHVzLnN0YXR1cyA9PT0gJ3JlcXVpcmVzX2FjdGlvbicpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIlJlcXVpcmVzIGFjdGlvblwiKVxuICAgICAgICAgIGNvbnN0IHJlcXVpcmVkQWN0aW9ucyA9IHJ1blN0YXR1cy5yZXF1aXJlZF9hY3Rpb24uc3VibWl0X3Rvb2xfb3V0cHV0cztcbiAgICAgICAgICBjb25zb2xlLmxvZyhyZXF1aXJlZEFjdGlvbnMpXG4gICAgICAgICAgY29uc3QgdG9vbHNPdXRwdXQgPSBbXVxuICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVxdWlyZWRBY3Rpb25zW1widG9vbF9jYWxsc1wiXS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgYWN0aW9uID0gcmVxdWlyZWRBY3Rpb25zW1widG9vbF9jYWxsc1wiXVtpXVxuICAgICAgICAgICAgY29uc3QgZnVuY3Rpb25OYW1lID0gYWN0aW9uW1wiZnVuY3Rpb25cIl1bXCJuYW1lXCJdXG4gICAgICAgICAgICBjb25zdCBhcmdzID0gSlNPTi5wYXJzZShhY3Rpb25bXCJmdW5jdGlvblwiXVtcImFyZ3VtZW50c1wiXSlcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiYWN0aW9uXCIsIGFjdGlvbilcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiZnVuY3Rpb25OYW1lXCIsIGZ1bmN0aW9uTmFtZSlcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiYXJnc1wiLCBhcmdzKVxuICAgICAgICAgICAgaWYgKGZ1bmN0aW9uTmFtZSA9PSBcImdldERvY3VtZW50VGV4dEZyb21MaW5rXCIpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJGdW5jdGlvbiBmb3VuZFwiKVxuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkxpbmsgYXJnOiBcIiwgYXJncy5saW5rKVxuICAgICAgICAgICAgICBjb25zdCBvdXRwdXQgPSBhd2FpdCBnZXREb2N1bWVudFRleHRGcm9tTGluayhhcmdzLmxpbmspXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiT3V0cHV0OiBcIiwgb3V0cHV0KVxuXG4gICAgICAgICAgICAgIHRvb2xzT3V0cHV0LnB1c2goe1xuICAgICAgICAgICAgICAgIFwidG9vbF9jYWxsX2lkXCI6IGFjdGlvbltcImlkXCJdLFxuICAgICAgICAgICAgICAgIFwib3V0cHV0XCI6IG91dHB1dCxcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkZ1bmN0aW9uIG5vdCBmb3VuZFwiKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIFN1Ym1pdCB0b29scyBvdXRwdXRzIGJhY2sgdG8gdGhlIEFzc2lzdGFudHMgQVBJIFxuICAgICAgICAgIGNvbnNvbGUubG9nKFwiU3VibWl0dGluZyB0b29sIG91dHB1dHMuLi5cIilcbiAgICAgICAgICBydW4gPSBhd2FpdCBvcGVuYWkuYmV0YS50aHJlYWRzLnJ1bnMuc3VibWl0VG9vbE91dHB1dHNBbmRQb2xsKFxuICAgICAgICAgICAgdGhyZWFkLmlkLFxuICAgICAgICAgICAgcnVuLmlkLFxuICAgICAgICAgICAgeyB0b29sX291dHB1dHM6IHRvb2xzT3V0cHV0IH1cbiAgICAgICAgICApO1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiVG9vbCBvdXRwdXRzIHN1Ym1pdHRlZFwiKVxuICAgICAgICB9XG5cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJXYWl0aW5nIGZvciB0aGUgQXNzaXN0YW50IHRvIHByb2Nlc3MuLi5cIilcbiAgICAgICAgICBjb25zb2xlLmxvZyhydW5TdGF0dXMuc3RhdHVzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBwcm9jZXNzaW5nIHJlcXVlc3Q6XCIsIGVycm9yKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IFwiRXJyb3IgcHJvY2Vzc2luZyByZXF1ZXN0XCIgfSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgZXJyb3I6IFwiTWV0aG9kIG5vdCBhbGxvd2VkXCIgfSk7XG4gIH1cbn1cblxuLy8gRnVuY3Rpb24gdG8gY3JlYXRlIGEgZGVsYXkgdXNpbmcgYSBwcm9taXNlXG5mdW5jdGlvbiBkZWxheShtcykge1xuICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKSk7XG59XG4iXSwibmFtZXMiOlsiT3BlbkFJIiwiYXhpb3MiLCJmcyIsIm9wZW5haUFQSUtleSIsInByb2Nlc3MiLCJlbnYiLCJPUEVOQUlfS0VZIiwib3BlbmFpTW9kZWwiLCJPUEVOQUlfTU9ERUwiLCJjb25zb2xlIiwibG9nIiwib3BlbmFpIiwiYXBpS2V5IiwiZG9jdW1lbnRRdWVzdGlvbkFzc2lzdGFudElEIiwiZ2V0RG9jdW1lbnRUZXh0RnJvbUxpbmsiLCJsaW5rIiwiaW5zdHJ1Y3Rpb25zIiwiYXNzaXN0YW50IiwiYmV0YSIsImFzc2lzdGFudHMiLCJjcmVhdGUiLCJuYW1lIiwibW9kZWwiLCJ0b29scyIsInR5cGUiLCJhc3Npc3RhbnRJZCIsImlkIiwiZmlsZU5hbWUiLCJzcGxpdCIsInBvcCIsInJlc3BvbnNlIiwiZ2V0IiwicmVzcG9uc2VUeXBlIiwiYnVmZmVyIiwiQnVmZmVyIiwiZnJvbSIsImRhdGEiLCJ3cml0ZUZpbGVTeW5jIiwiZmlsZVN0cmVhbXMiLCJtYXAiLCJwYXRoIiwiY3JlYXRlUmVhZFN0cmVhbSIsInZlY3RvclN0b3JlIiwidmVjdG9yU3RvcmVzIiwiZmlsZSIsImZpbGVzIiwicHVycG9zZSIsInRocmVhZCIsInRocmVhZHMiLCJtZXNzYWdlcyIsInJvbGUiLCJjb250ZW50IiwiYXR0YWNobWVudHMiLCJmaWxlX2lkIiwidG9vbF9yZXNvdXJjZXMiLCJmaWxlX3NlYXJjaCIsInJ1biIsInJ1bnMiLCJjcmVhdGVBbmRQb2xsIiwiYXNzaXN0YW50X2lkIiwibGlzdCIsInJ1bl9pZCIsIm1lc3NhZ2UiLCJ0ZXh0IiwiYW5ub3RhdGlvbnMiLCJjaXRhdGlvbnMiLCJpbmRleCIsImFubm90YXRpb24iLCJ2YWx1ZSIsInJlcGxhY2UiLCJmaWxlX2NpdGF0aW9uIiwiY2l0ZWRGaWxlIiwicmV0cmlldmUiLCJwdXNoIiwiZmlsZW5hbWUiLCJqb2luIiwiZGVsYXkiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJwYXJzZSIsImxpbmtPclRleHQiLCJxdWVzdGlvbiIsInVzZXJNZXNzYWdlIiwiaW5jbHVkZXMiLCJydW5TdGF0dXMiLCJzdGF0dXMiLCJtZXNzYWdlU3RyIiwianNvbiIsInJlcXVpcmVkQWN0aW9ucyIsInJlcXVpcmVkX2FjdGlvbiIsInN1Ym1pdF90b29sX291dHB1dHMiLCJ0b29sc091dHB1dCIsImkiLCJsZW5ndGgiLCJhY3Rpb24iLCJmdW5jdGlvbk5hbWUiLCJhcmdzIiwib3V0cHV0Iiwic3VibWl0VG9vbE91dHB1dHNBbmRQb2xsIiwidG9vbF9vdXRwdXRzIiwiZXJyb3IiLCJtcyIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/ask.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fask&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fask.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();